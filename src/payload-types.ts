/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    vehicles: Vehicle;
    'vehicle-images': VehicleImage;
    services: Service;
    'service-categories': ServiceCategory;
    'service-options': ServiceOption;
    orders: Order;
    orderSyncEvents: OrderSyncEvent;
    'customer-tiers': CustomerTier;
    media: Media;
    'whatsapp-messages': WhatsappMessage;
    'whatsapp-templates': WhatsappTemplate;
    intake: Intake;
    delivery: Delivery;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    vehicles: VehiclesSelect<false> | VehiclesSelect<true>;
    'vehicle-images': VehicleImagesSelect<false> | VehicleImagesSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    'service-categories': ServiceCategoriesSelect<false> | ServiceCategoriesSelect<true>;
    'service-options': ServiceOptionsSelect<false> | ServiceOptionsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    orderSyncEvents: OrderSyncEventsSelect<false> | OrderSyncEventsSelect<true>;
    'customer-tiers': CustomerTiersSelect<false> | CustomerTiersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'whatsapp-messages': WhatsappMessagesSelect<false> | WhatsappMessagesSelect<true>;
    'whatsapp-templates': WhatsappTemplatesSelect<false> | WhatsappTemplatesSelect<true>;
    intake: IntakeSelect<false> | IntakeSelect<true>;
    delivery: DeliverySelect<false> | DeliverySelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role: 'admin' | 'staff' | 'customer';
  whatsappNumber?: string | null;
  /**
   * Whether the WhatsApp number has been verified through conversation
   */
  whatsappVerified?: boolean | null;
  /**
   * User consent for receiving WhatsApp notifications
   */
  whatsappOptIn?: boolean | null;
  /**
   * Last time customer initiated WhatsApp contact (for 24h messaging window)
   */
  lastWhatsappContact?: string | null;
  /**
   * Gupshup conversation identifier for this user
   */
  whatsappConversationId?: string | null;
  customerTier?: (string | null) | CustomerTier;
  firstName?: string | null;
  lastName?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer-tiers".
 */
export interface CustomerTier {
  id: string;
  /**
   * Name of the customer tier (e.g., "Standard", "Fleet", "VIP Member")
   */
  tierName: string;
  /**
   * Description of the benefits and features of this tier
   */
  description?: string | null;
  /**
   * Default queue priority for customers in this tier
   */
  defaultQueue: 'regular' | 'vip' | 'remnant';
  /**
   * General discount percentage for this tier (0-100)
   */
  discountPercentage?: number | null;
  /**
   * Specific pricing overrides for individual services
   */
  pricingOverrides?:
    | {
        service: string | Service;
        overriddenPrice: number;
        /**
         * Alternative to fixed price - percentage discount
         */
        discountPercentage?: number | null;
        id?: string | null;
      }[]
    | null;
  /**
   * List of benefits for this tier
   */
  benefits?:
    | {
        benefit: string;
        /**
         * Lucide icon name for this benefit
         */
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Color theme for this tier in the UI
   */
  color?: ('blue' | 'purple' | 'green' | 'pink' | 'orange' | 'gold' | 'silver') | null;
  /**
   * Minimum total spend required to qualify for this tier
   */
  minimumSpend?: number | null;
  /**
   * Automatically upgrade customers who meet the minimum spend
   */
  autoUpgrade?: boolean | null;
  /**
   * Order in which tiers appear (lower numbers first)
   */
  sortOrder?: number | null;
  /**
   * Whether this tier is available for assignment
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: string;
  /**
   * Name of the service (e.g., "Basic Wash", "Premium Detail")
   */
  name: string;
  /**
   * Detailed description of what this service includes
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Which category this service belongs to
   */
  category: string | ServiceCategory;
  /**
   * Base price for this service (in your local currency)
   */
  basePrice: number;
  /**
   * Different pricing for different vehicle types (overrides base price)
   */
  vehicleTypePricing?:
    | {
        vehicleType: 'sedan' | 'mpv_van' | 'large_pickup' | 'regular_bike' | 'heavy_bike' | 'very_heavy_bike';
        price: number;
        id?: string | null;
      }[]
    | null;
  /**
   * Individual steps that make up this service
   */
  steps?:
    | {
        stepName: string;
        estimatedMinutes: number;
        description?: string | null;
        sortOrder?: number | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Service options that can be added to this service
   */
  compatibleOptions?: (string | ServiceOption)[] | null;
  /**
   * Total estimated time for this service
   */
  estimatedMinutes: number;
  /**
   * Image representing this service
   */
  image?: (string | null) | Media;
  /**
   * Lucide icon name for this service
   */
  icon?: string | null;
  /**
   * Mark as popular to highlight in the UI
   */
  isPopular?: boolean | null;
  /**
   * Order in which services appear (lower numbers first)
   */
  sortOrder?: number | null;
  /**
   * Whether this service is available for booking
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-categories".
 */
export interface ServiceCategory {
  id: string;
  /**
   * Name of the service category (e.g., "Exterior Wash", "Interior Detailing")
   */
  name: string;
  /**
   * Brief description of what this category includes
   */
  description?: string | null;
  /**
   * Lucide icon name for the category (e.g., "car", "sparkles")
   */
  icon?: string | null;
  /**
   * Color theme for this category in the UI
   */
  color?: ('blue' | 'purple' | 'green' | 'pink' | 'orange') | null;
  /**
   * Order in which categories appear (lower numbers first)
   */
  sortOrder?: number | null;
  /**
   * Whether this category is available for selection
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-options".
 */
export interface ServiceOption {
  id: string;
  /**
   * Name of the service option (e.g., "Tire Shine", "Wax Coating")
   */
  name: string;
  /**
   * Detailed description of what this option includes
   */
  description?: string | null;
  /**
   * Additional cost for this option (in your local currency)
   */
  additionalPrice: number;
  /**
   * Which service category this option belongs to
   */
  category?: (string | null) | ServiceCategory;
  /**
   * Vehicle types this option can be applied to (leave empty for all)
   */
  applicableVehicleTypes?:
    | ('sedan' | 'mpv_van' | 'large_pickup' | 'regular_bike' | 'heavy_bike' | 'very_heavy_bike')[]
    | null;
  /**
   * Additional time this option adds to the service
   */
  estimatedMinutes?: number | null;
  /**
   * Lucide icon name for this option
   */
  icon?: string | null;
  /**
   * Mark as popular to highlight in the UI
   */
  isPopular?: boolean | null;
  /**
   * Order in which options appear (lower numbers first)
   */
  sortOrder?: number | null;
  /**
   * Whether this option is available for selection
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  /**
   * Alternative text for accessibility and SEO
   */
  alt: string;
  /**
   * Optional caption for the image
   */
  caption?: string | null;
  /**
   * Category to help organize media files
   */
  category?: ('vehicle' | 'service' | 'before_after' | 'general') | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vehicles".
 */
export interface Vehicle {
  id: string;
  /**
   * Vehicle license plate number
   */
  licensePlate: string;
  /**
   * Photo of the vehicle for AI classification
   */
  image?: (string | null) | Media;
  /**
   * Vehicle type determined by AI or manually selected
   */
  vehicleType: 'sedan' | 'mpv_van' | 'large_pickup' | 'regular_bike' | 'heavy_bike' | 'very_heavy_bike';
  /**
   * Customer who owns this vehicle
   */
  owner: string | User;
  /**
   * Vehicle manufacturer (e.g., Toyota, Honda)
   */
  make?: string | null;
  /**
   * Vehicle model (e.g., Camry, Civic)
   */
  model?: string | null;
  /**
   * Manufacturing year
   */
  year?: number | null;
  /**
   * Primary vehicle color
   */
  color?: string | null;
  /**
   * Additional notes about the vehicle
   */
  notes?: string | null;
  /**
   * Confidence score from AI classification (0-1)
   */
  aiClassificationConfidence?: number | null;
  /**
   * Whether this vehicle is actively used by the customer
   */
  isActive?: boolean | null;
  /**
   * All images captured for this vehicle during intake and delivery
   */
  vehicleImages?: (string | VehicleImage)[] | null;
  /**
   * AI-analyzed vehicle dimensions and size category
   */
  sizeAnalysis?: {
    /**
     * Vehicle length in meters (AI estimated)
     */
    length?: number | null;
    /**
     * Vehicle width in meters (AI estimated)
     */
    width?: number | null;
    /**
     * Vehicle height in meters (AI estimated)
     */
    height?: number | null;
    /**
     * AI-determined vehicle size category
     */
    sizeCategory?: ('compact' | 'midsize' | 'large' | 'extra_large') | null;
    /**
     * AI confidence score for size analysis (0-1)
     */
    confidence?: number | null;
  };
  /**
   * Comprehensive damage analysis from vehicle images
   */
  damageAssessment?: {
    /**
     * Damages detected during vehicle intake
     */
    intakeDamages?:
      | {
          description: string;
          severity: 'minor' | 'moderate' | 'major' | 'severe';
          location: string;
          confidence?: number | null;
          relatedImage?: (string | null) | VehicleImage;
          id?: string | null;
        }[]
      | null;
    /**
     * Damages detected during vehicle delivery (comparison with intake)
     */
    deliveryDamages?:
      | {
          description: string;
          severity: 'minor' | 'moderate' | 'major' | 'severe';
          location: string;
          /**
           * Whether this damage occurred during service
           */
          isNewDamage?: boolean | null;
          confidence?: number | null;
          relatedImage?: (string | null) | VehicleImage;
          id?: string | null;
        }[]
      | null;
    /**
     * AI assessment of overall vehicle condition
     */
    overallCondition?: ('excellent' | 'good' | 'fair' | 'poor' | 'damaged') | null;
    /**
     * When the damage assessment was last updated
     */
    lastAssessmentDate?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vehicle-images".
 */
export interface VehicleImage {
  id: string;
  /**
   * Vehicle this image belongs to
   */
  vehicle: string | Vehicle;
  /**
   * Order during which this image was captured
   */
  order: string | Order;
  /**
   * The actual vehicle image file
   */
  image: string | Media;
  /**
   * Type/angle of the vehicle image
   */
  imageType: 'front' | 'back' | 'left' | 'right' | 'interior' | 'damage' | 'license_plate' | 'additional';
  /**
   * Whether this image was taken during intake or delivery
   */
  captureStage: 'intake' | 'delivery';
  /**
   * Whether this image has been processed by AI for analysis
   */
  aiProcessed?: boolean | null;
  /**
   * Whether AI detected damage in this image
   */
  damageDetected?: boolean | null;
  /**
   * AI-generated description of any damage found in the image
   */
  damageDescription?: string | null;
  /**
   * AI confidence score for damage detection (0-1)
   */
  damageConfidence?: number | null;
  /**
   * Any text extracted from the image (license plates, etc.)
   */
  extractedText?: string | null;
  /**
   * AI analysis of vehicle dimensions and size
   */
  vehicleSize?: {
    /**
     * AI estimated vehicle length in meters
     */
    estimatedLength?: number | null;
    /**
     * AI estimated vehicle width in meters
     */
    estimatedWidth?: number | null;
    /**
     * AI estimated vehicle height in meters
     */
    estimatedHeight?: number | null;
    /**
     * AI-determined vehicle size category
     */
    sizeCategory?: ('compact' | 'midsize' | 'large' | 'extra_large') | null;
    /**
     * AI confidence score for size analysis (0-1)
     */
    confidence?: number | null;
  };
  /**
   * Comprehensive AI analysis of the vehicle image
   */
  aiAnalysis?: {
    /**
     * AI assessment of overall vehicle condition
     */
    vehicleCondition?: ('excellent' | 'good' | 'fair' | 'poor' | 'damaged') | null;
    /**
     * List of vehicle features visible in this image
     */
    visibleFeatures?:
      | {
          feature: string;
          id?: string | null;
        }[]
      | null;
    /**
     * AI analysis of vehicle color(s)
     */
    colorAnalysis?: string | null;
    /**
     * Time taken for AI processing in seconds
     */
    processingTime?: number | null;
    /**
     * Complete raw response from AI service for debugging
     */
    rawAiResponse?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  /**
   * Technical metadata about the image capture
   */
  metadata?: {
    /**
     * Staff member who captured this image
     */
    capturedBy?: (string | null) | User;
    /**
     * Device used to capture the image (camera, phone, etc.)
     */
    captureDevice?: string | null;
    /**
     * GPS coordinates where the image was captured
     *
     * @minItems 2
     * @maxItems 2
     */
    gpsLocation?: [number, number] | null;
    /**
     * Weather conditions during image capture
     */
    weather?: string | null;
    /**
     * Lighting conditions during capture
     */
    lighting?: ('daylight' | 'artificial' | 'low_light' | 'night') | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  /**
   * Auto-generated unique order identifier
   */
  orderID: string;
  /**
   * Current stage of the order in the WhatsApp workflow
   */
  orderStage: 'empty' | 'initiated' | 'open' | 'billed' | 'paid';
  /**
   * Whether this order has been linked to a WhatsApp conversation
   */
  whatsappLinked?: boolean | null;
  /**
   * WhatsApp number of the customer who initiated this order
   */
  whatsappNumber?: string | null;
  /**
   * Whether a QR code has been generated for this order
   */
  qrCodeGenerated?: boolean | null;
  /**
   * When the customer scanned the QR code
   */
  qrCodeScannedAt?: string | null;
  /**
   * When the vehicle information was captured
   */
  vehicleCapturedAt?: string | null;
  /**
   * When AI processing of vehicle information was completed
   */
  aiProcessedAt?: string | null;
  /**
   * When the payment link was sent via WhatsApp
   */
  paymentLinkSentAt?: string | null;
  /**
   * Customer who placed this order
   */
  customer?: (string | null) | User;
  /**
   * Vehicle being serviced
   */
  vehicle?: (string | null) | Vehicle;
  /**
   * Services and options included in this order
   */
  servicesRendered?:
    | {
        service: string | Service;
        selectedOptions?: (string | ServiceOption)[] | null;
        /**
         * Final price for this service (after tier discounts)
         */
        servicePrice: number;
        /**
         * Total price for selected options
         */
        optionsPrice?: number | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Total order amount including all services and options
   */
  totalAmount: number;
  /**
   * Total discount applied to this order
   */
  discountAmount?: number | null;
  paymentStatus: 'pending' | 'paid' | 'failed' | 'refunded' | 'cash';
  /**
   * Transaction ID from Fiuu payment gateway
   */
  fiuuTransactionId?: string | null;
  queue: 'regular' | 'vip' | 'remnant';
  /**
   * Progress tracking for each step of the service
   */
  jobStatus?:
    | {
        stepName: string;
        status: 'pending' | 'in_progress' | 'completed' | 'skipped';
        completedBy?: (string | null) | User;
        timestamp?: string | null;
        notes?: string | null;
        id?: string | null;
      }[]
    | null;
  overallStatus: 'pending' | 'in_progress' | 'completed' | 'ready' | 'picked_up' | 'cancelled';
  /**
   * When the service is expected to be completed
   */
  estimatedCompletionTime?: string | null;
  /**
   * When the service was actually completed
   */
  actualCompletionTime?: string | null;
  /**
   * Special requests or notes from the customer
   */
  customerNotes?: string | null;
  /**
   * Internal notes for staff
   */
  staffNotes?: string | null;
  /**
   * Staff member who created this order
   */
  createdBy?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orderSyncEvents".
 */
export interface OrderSyncEvent {
  id: string;
  order: string | Order;
  eventType: 'stage_change' | 'status_update' | 'payment_update' | 'queue_update' | 'job_progress_update';
  /**
   * The order field that was changed (e.g., orderStage, paymentStatus). Optional for some event types.
   */
  fieldName?: string | null;
  /**
   * The previous state value before the change (supports complex data structures)
   */
  previousValue?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * The new state value after the change (supports complex data structures)
   */
  newValue?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Additional event context and debugging information
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * User or system that triggered this change
   */
  triggeredBy?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * WhatsApp message history and conversation tracking
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "whatsapp-messages".
 */
export interface WhatsappMessage {
  id: string;
  /**
   * User associated with this message
   */
  user?: (string | null) | User;
  /**
   * Order associated with this message conversation
   */
  order?: (string | null) | Order;
  /**
   * Unique message identifier from Gupshup
   */
  messageId: string;
  /**
   * Gupshup conversation identifier
   */
  conversationId?: string | null;
  /**
   * WhatsApp number that sent/received this message
   */
  whatsappNumber: string;
  /**
   * Message direction relative to our system
   */
  direction: 'inbound' | 'outbound';
  /**
   * Type of WhatsApp message
   */
  messageType: 'text' | 'template' | 'media' | 'interactive';
  /**
   * The actual message content
   */
  content: string;
  /**
   * Name of the template used (for template messages)
   */
  templateName?: string | null;
  /**
   * Delivery status of the message
   */
  status: 'sent' | 'delivered' | 'read' | 'failed' | 'received';
  /**
   * When the message was sent/received
   */
  timestamp: string;
  /**
   * Additional message metadata from Gupshup
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Error details if message failed
   */
  errorMessage?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * WhatsApp message templates for automated communications
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "whatsapp-templates".
 */
export interface WhatsappTemplate {
  id: string;
  /**
   * Internal name for this template
   */
  name: string;
  /**
   * Template ID from Gupshup dashboard
   */
  templateId: string;
  /**
   * Category of this template for organization
   */
  category:
    | 'order_initiated'
    | 'vehicle_captured'
    | 'services_added'
    | 'payment_request'
    | 'completion'
    | 'welcome'
    | 'status_update'
    | 'error'
    | 'promotional';
  /**
   * Template content with variable placeholders (e.g., {{orderID}})
   */
  content: string;
  /**
   * Variables that can be substituted in this template
   */
  variables?:
    | {
        /**
         * Variable name without curly braces (e.g., orderID)
         */
        variable: string;
        /**
         * Description of what this variable represents
         */
        description?: string | null;
        /**
         * Whether this variable is required for the template
         */
        required?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * WhatsApp approval status for this template
   */
  approvalStatus: 'pending' | 'approved' | 'rejected' | 'in_review';
  /**
   * Whether this template is active and can be used
   */
  isActive?: boolean | null;
  /**
   * Language of this template
   */
  language: 'en' | 'ms' | 'zh' | 'ta';
  /**
   * Number of times this template has been used
   */
  usageCount?: number | null;
  /**
   * When this template was last used
   */
  lastUsed?: string | null;
  /**
   * Internal notes about this template
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Vehicle intake documentation with images and damage assessment
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "intake".
 */
export interface Intake {
  id: string;
  /**
   * Order this intake belongs to
   */
  order: string | Order;
  /**
   * Auto-populated from related order
   */
  orderID?: string | null;
  /**
   * Clear image of vehicle numberplate for AI extraction
   */
  numberplateImage: string | Media;
  /**
   * Multiple angle images for vehicle type detection and damage assessment
   */
  vehicleImages?:
    | {
        image: string | Media;
        angle:
          | 'front'
          | 'rear'
          | 'left'
          | 'right'
          | 'front_left'
          | 'front_right'
          | 'rear_left'
          | 'rear_right'
          | 'interior'
          | 'engine';
        /**
         * Optional description of what this image shows
         */
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Initial damage assessment during intake
   */
  damageAssessment: {
    overallCondition: 'excellent' | 'good' | 'fair' | 'poor';
    /**
     * Document any existing damage found during intake
     */
    existingDamage?:
      | {
          type: 'scratch' | 'dent' | 'crack' | 'rust' | 'paint_damage' | 'broken_part' | 'missing_part' | 'other';
          /**
           * Where on the vehicle is this damage located
           */
          location: string;
          severity: 'minor' | 'moderate' | 'major' | 'severe';
          /**
           * Detailed description of the damage
           */
          description?: string | null;
          /**
           * Close-up images of this specific damage
           */
          images?: (string | Media)[] | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Any additional observations or notes about the vehicle condition
     */
    notes?: string | null;
  };
  /**
   * Results from AI analysis of intake images
   */
  aiProcessingResults?: {
    /**
     * Numberplate text extracted by AI
     */
    numberplateExtracted?: string | null;
    /**
     * Vehicle type detected by AI
     */
    vehicleTypeDetected?: string | null;
    /**
     * Damage detected by AI analysis
     */
    damageDetected?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    processingStatus?: ('pending' | 'processing' | 'completed' | 'failed') | null;
    /**
     * Any errors encountered during AI processing
     */
    processingErrors?: string | null;
  };
  /**
   * Staff member who performed the intake
   */
  staffMember?: (string | null) | User;
  /**
   * When the intake process was completed
   */
  intakeCompletedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Vehicle delivery documentation with inspection and damage comparison
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "delivery".
 */
export interface Delivery {
  id: string;
  /**
   * Order this delivery belongs to
   */
  order: string | Order;
  /**
   * Auto-populated from related order
   */
  orderID?: string | null;
  /**
   * Intake record for damage comparison
   */
  intake?: (string | null) | Intake;
  /**
   * Images taken during delivery for damage comparison
   */
  deliveryImages?:
    | {
        image: string | Media;
        angle:
          | 'front'
          | 'rear'
          | 'left'
          | 'right'
          | 'front_left'
          | 'front_right'
          | 'rear_left'
          | 'rear_right'
          | 'interior'
          | 'engine'
          | 'damage_detail';
        /**
         * Description of what this image shows
         */
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Detailed vehicle inspection during delivery
   */
  vehicleInspection: {
    batteryStatus: 'excellent' | 'good' | 'fair' | 'poor' | 'needs_replacement';
    tyreCondition?: {
      frontLeft?: ('excellent' | 'good' | 'fair' | 'poor' | 'needs_replacement') | null;
      frontRight?: ('excellent' | 'good' | 'fair' | 'poor' | 'needs_replacement') | null;
      rearLeft?: ('excellent' | 'good' | 'fair' | 'poor' | 'needs_replacement') | null;
      rearRight?: ('excellent' | 'good' | 'fair' | 'poor' | 'needs_replacement') | null;
    };
    tyrePressure?: {
      frontLeft?: number | null;
      frontRight?: number | null;
      rearLeft?: number | null;
      rearRight?: number | null;
    };
    engineStatus: 'excellent' | 'good' | 'fair' | 'poor' | 'needs_service' | 'not_checked';
    rimCondition?: {
      frontLeft?: ('excellent' | 'good' | 'fair' | 'poor' | 'damaged') | null;
      frontRight?: ('excellent' | 'good' | 'fair' | 'poor' | 'damaged') | null;
      rearLeft?: ('excellent' | 'good' | 'fair' | 'poor' | 'damaged') | null;
      rearRight?: ('excellent' | 'good' | 'fair' | 'poor' | 'damaged') | null;
    };
    /**
     * Any recommendations for the customer
     */
    recommendations?:
      | {
          category:
            | 'battery'
            | 'tyres'
            | 'engine'
            | 'rims'
            | 'brakes'
            | 'fluids'
            | 'electrical'
            | 'body_work'
            | 'other';
          priority: 'low' | 'medium' | 'high' | 'urgent';
          /**
           * Detailed recommendation description
           */
          description: string;
          /**
           * Estimated cost for this recommendation
           */
          estimatedCost?: number | null;
          id?: string | null;
        }[]
      | null;
    /**
     * General notes about the vehicle condition and delivery
     */
    overallNotes?: string | null;
  };
  /**
   * Comparison between intake and delivery images for new damage detection
   */
  damageComparison?: {
    /**
     * Whether new damage was found during delivery inspection
     */
    newDamageDetected?: boolean | null;
    /**
     * Document any new damage found during delivery
     */
    newDamage?:
      | {
          type: 'scratch' | 'dent' | 'crack' | 'rust' | 'paint_damage' | 'broken_part' | 'missing_part' | 'other';
          /**
           * Where on the vehicle is this new damage located
           */
          location: string;
          severity: 'minor' | 'moderate' | 'major' | 'severe';
          /**
           * Detailed description of the new damage
           */
          description?: string | null;
          /**
           * Close-up images of this specific new damage
           */
          images?: (string | Media)[] | null;
          /**
           * Whether this damage likely occurred during the service
           */
          likelyDuringService?: boolean | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Results from AI-powered damage comparison
     */
    aiComparisonResults?: {
      comparisonStatus?: ('pending' | 'processing' | 'completed' | 'failed') | null;
      /**
       * New damage detected by AI comparison
       */
      aiDetectedDamage?:
        | {
            [k: string]: unknown;
          }
        | unknown[]
        | string
        | number
        | boolean
        | null;
      /**
       * AI confidence score for damage detection (0-1)
       */
      confidenceScore?: number | null;
      /**
       * Any errors encountered during AI comparison
       */
      comparisonErrors?: string | null;
    };
  };
  /**
   * Staff member who performed the delivery inspection
   */
  staffMember?: (string | null) | User;
  /**
   * When the delivery inspection was completed
   */
  deliveryCompletedAt?: string | null;
  /**
   * Whether customer has been notified of any new damage
   */
  customerNotified?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'vehicles';
        value: string | Vehicle;
      } | null)
    | ({
        relationTo: 'vehicle-images';
        value: string | VehicleImage;
      } | null)
    | ({
        relationTo: 'services';
        value: string | Service;
      } | null)
    | ({
        relationTo: 'service-categories';
        value: string | ServiceCategory;
      } | null)
    | ({
        relationTo: 'service-options';
        value: string | ServiceOption;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'orderSyncEvents';
        value: string | OrderSyncEvent;
      } | null)
    | ({
        relationTo: 'customer-tiers';
        value: string | CustomerTier;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'whatsapp-messages';
        value: string | WhatsappMessage;
      } | null)
    | ({
        relationTo: 'whatsapp-templates';
        value: string | WhatsappTemplate;
      } | null)
    | ({
        relationTo: 'intake';
        value: string | Intake;
      } | null)
    | ({
        relationTo: 'delivery';
        value: string | Delivery;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  whatsappNumber?: T;
  whatsappVerified?: T;
  whatsappOptIn?: T;
  lastWhatsappContact?: T;
  whatsappConversationId?: T;
  customerTier?: T;
  firstName?: T;
  lastName?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vehicles_select".
 */
export interface VehiclesSelect<T extends boolean = true> {
  licensePlate?: T;
  image?: T;
  vehicleType?: T;
  owner?: T;
  make?: T;
  model?: T;
  year?: T;
  color?: T;
  notes?: T;
  aiClassificationConfidence?: T;
  isActive?: T;
  vehicleImages?: T;
  sizeAnalysis?:
    | T
    | {
        length?: T;
        width?: T;
        height?: T;
        sizeCategory?: T;
        confidence?: T;
      };
  damageAssessment?:
    | T
    | {
        intakeDamages?:
          | T
          | {
              description?: T;
              severity?: T;
              location?: T;
              confidence?: T;
              relatedImage?: T;
              id?: T;
            };
        deliveryDamages?:
          | T
          | {
              description?: T;
              severity?: T;
              location?: T;
              isNewDamage?: T;
              confidence?: T;
              relatedImage?: T;
              id?: T;
            };
        overallCondition?: T;
        lastAssessmentDate?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vehicle-images_select".
 */
export interface VehicleImagesSelect<T extends boolean = true> {
  vehicle?: T;
  order?: T;
  image?: T;
  imageType?: T;
  captureStage?: T;
  aiProcessed?: T;
  damageDetected?: T;
  damageDescription?: T;
  damageConfidence?: T;
  extractedText?: T;
  vehicleSize?:
    | T
    | {
        estimatedLength?: T;
        estimatedWidth?: T;
        estimatedHeight?: T;
        sizeCategory?: T;
        confidence?: T;
      };
  aiAnalysis?:
    | T
    | {
        vehicleCondition?: T;
        visibleFeatures?:
          | T
          | {
              feature?: T;
              id?: T;
            };
        colorAnalysis?: T;
        processingTime?: T;
        rawAiResponse?: T;
      };
  metadata?:
    | T
    | {
        capturedBy?: T;
        captureDevice?: T;
        gpsLocation?: T;
        weather?: T;
        lighting?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  category?: T;
  basePrice?: T;
  vehicleTypePricing?:
    | T
    | {
        vehicleType?: T;
        price?: T;
        id?: T;
      };
  steps?:
    | T
    | {
        stepName?: T;
        estimatedMinutes?: T;
        description?: T;
        sortOrder?: T;
        id?: T;
      };
  compatibleOptions?: T;
  estimatedMinutes?: T;
  image?: T;
  icon?: T;
  isPopular?: T;
  sortOrder?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-categories_select".
 */
export interface ServiceCategoriesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  icon?: T;
  color?: T;
  sortOrder?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-options_select".
 */
export interface ServiceOptionsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  additionalPrice?: T;
  category?: T;
  applicableVehicleTypes?: T;
  estimatedMinutes?: T;
  icon?: T;
  isPopular?: T;
  sortOrder?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderID?: T;
  orderStage?: T;
  whatsappLinked?: T;
  whatsappNumber?: T;
  qrCodeGenerated?: T;
  qrCodeScannedAt?: T;
  vehicleCapturedAt?: T;
  aiProcessedAt?: T;
  paymentLinkSentAt?: T;
  customer?: T;
  vehicle?: T;
  servicesRendered?:
    | T
    | {
        service?: T;
        selectedOptions?: T;
        servicePrice?: T;
        optionsPrice?: T;
        id?: T;
      };
  totalAmount?: T;
  discountAmount?: T;
  paymentStatus?: T;
  fiuuTransactionId?: T;
  queue?: T;
  jobStatus?:
    | T
    | {
        stepName?: T;
        status?: T;
        completedBy?: T;
        timestamp?: T;
        notes?: T;
        id?: T;
      };
  overallStatus?: T;
  estimatedCompletionTime?: T;
  actualCompletionTime?: T;
  customerNotes?: T;
  staffNotes?: T;
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orderSyncEvents_select".
 */
export interface OrderSyncEventsSelect<T extends boolean = true> {
  order?: T;
  eventType?: T;
  fieldName?: T;
  previousValue?: T;
  newValue?: T;
  metadata?: T;
  triggeredBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer-tiers_select".
 */
export interface CustomerTiersSelect<T extends boolean = true> {
  tierName?: T;
  description?: T;
  defaultQueue?: T;
  discountPercentage?: T;
  pricingOverrides?:
    | T
    | {
        service?: T;
        overriddenPrice?: T;
        discountPercentage?: T;
        id?: T;
      };
  benefits?:
    | T
    | {
        benefit?: T;
        icon?: T;
        id?: T;
      };
  color?: T;
  minimumSpend?: T;
  autoUpgrade?: T;
  sortOrder?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  category?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "whatsapp-messages_select".
 */
export interface WhatsappMessagesSelect<T extends boolean = true> {
  user?: T;
  order?: T;
  messageId?: T;
  conversationId?: T;
  whatsappNumber?: T;
  direction?: T;
  messageType?: T;
  content?: T;
  templateName?: T;
  status?: T;
  timestamp?: T;
  metadata?: T;
  errorMessage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "whatsapp-templates_select".
 */
export interface WhatsappTemplatesSelect<T extends boolean = true> {
  name?: T;
  templateId?: T;
  category?: T;
  content?: T;
  variables?:
    | T
    | {
        variable?: T;
        description?: T;
        required?: T;
        id?: T;
      };
  approvalStatus?: T;
  isActive?: T;
  language?: T;
  usageCount?: T;
  lastUsed?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "intake_select".
 */
export interface IntakeSelect<T extends boolean = true> {
  order?: T;
  orderID?: T;
  numberplateImage?: T;
  vehicleImages?:
    | T
    | {
        image?: T;
        angle?: T;
        description?: T;
        id?: T;
      };
  damageAssessment?:
    | T
    | {
        overallCondition?: T;
        existingDamage?:
          | T
          | {
              type?: T;
              location?: T;
              severity?: T;
              description?: T;
              images?: T;
              id?: T;
            };
        notes?: T;
      };
  aiProcessingResults?:
    | T
    | {
        numberplateExtracted?: T;
        vehicleTypeDetected?: T;
        damageDetected?: T;
        processingStatus?: T;
        processingErrors?: T;
      };
  staffMember?: T;
  intakeCompletedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "delivery_select".
 */
export interface DeliverySelect<T extends boolean = true> {
  order?: T;
  orderID?: T;
  intake?: T;
  deliveryImages?:
    | T
    | {
        image?: T;
        angle?: T;
        description?: T;
        id?: T;
      };
  vehicleInspection?:
    | T
    | {
        batteryStatus?: T;
        tyreCondition?:
          | T
          | {
              frontLeft?: T;
              frontRight?: T;
              rearLeft?: T;
              rearRight?: T;
            };
        tyrePressure?:
          | T
          | {
              frontLeft?: T;
              frontRight?: T;
              rearLeft?: T;
              rearRight?: T;
            };
        engineStatus?: T;
        rimCondition?:
          | T
          | {
              frontLeft?: T;
              frontRight?: T;
              rearLeft?: T;
              rearRight?: T;
            };
        recommendations?:
          | T
          | {
              category?: T;
              priority?: T;
              description?: T;
              estimatedCost?: T;
              id?: T;
            };
        overallNotes?: T;
      };
  damageComparison?:
    | T
    | {
        newDamageDetected?: T;
        newDamage?:
          | T
          | {
              type?: T;
              location?: T;
              severity?: T;
              description?: T;
              images?: T;
              likelyDuringService?: T;
              id?: T;
            };
        aiComparisonResults?:
          | T
          | {
              comparisonStatus?: T;
              aiDetectedDamage?: T;
              confidenceScore?: T;
              comparisonErrors?: T;
            };
      };
  staffMember?: T;
  deliveryCompletedAt?: T;
  customerNotified?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}