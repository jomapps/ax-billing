/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

const fileMap = {
  
  "main.baml": "generator lang_typescript {\n  output_type typescript\n  output_dir \"../src/lib/baml_client\"\n  version \"0.207.0\"\n}\n\nclient<llm> OpenAI {\n  provider openai\n  options {\n    model \"gpt-4o\"\n    api_key env.OPENROUTER_API_KEY\n    base_url \"https://openrouter.ai/api/v1\"\n  }\n}\n\nclient<llm> FAL {\n  provider openai\n  options {\n    model \"fal-ai/llavav15-13b\"\n    api_key env.FAL_KEY\n    base_url \"https://fal.run\"\n  }\n}\n\nenum VehicleType {\n  CAR\n  TRUCK\n  MOTORCYCLE\n  VAN\n  SUV\n  OTHER\n}\n\nenum DamageType {\n  SCRATCH\n  DENT\n  CRACK\n  BROKEN_PART\n  RUST\n  PAINT_DAMAGE\n  STRUCTURAL_DAMAGE\n  OTHER\n}\n\nenum DamageSeverity {\n  MINOR\n  MODERATE\n  SEVERE\n  TOTAL_LOSS\n}\n\nclass VehicleDamage {\n  type DamageType\n  severity DamageSeverity\n  location string\n  description string\n  estimated_cost_range string?\n}\n\nclass VehicleAnalysis {\n  vehicle_type VehicleType\n  make string?\n  model string?\n  year int?\n  color string?\n  license_plate string?\n  damages VehicleDamage[]\n  overall_condition string\n  estimated_total_cost string?\n  recommendations string[]\n  confidence_score float?\n}\n\nfunction AnalyzeVehicleImage(image_url: string) -> VehicleAnalysis {\n  client OpenAI\n  prompt #\"\n    Analyze this vehicle image and provide a detailed assessment.\n    \n    Image: {{ image_url }}\n    \n    Please identify:\n    1. Vehicle type, make, model, year, and color if visible\n    2. All visible damages with their type, severity, location, and description\n    3. Overall vehicle condition\n    4. Estimated repair costs (provide ranges like \"$500-$1000\")\n    5. Recommendations for repairs\n    \n    Be thorough and accurate in your assessment. If you cannot determine something with confidence, indicate uncertainty.\n  \"#\n}\n\nfunction GenerateServiceRecommendations(vehicle_analysis: VehicleAnalysis, customer_tier: string) -> string[] {\n  client OpenAI\n  prompt #\"\n    Based on this vehicle analysis and customer tier, generate service recommendations:\n    \n    Vehicle Analysis: {{ vehicle_analysis }}\n    Customer Tier: {{ customer_tier }}\n    \n    Provide specific service recommendations considering:\n    - The identified damages and their severity\n    - Customer tier (premium customers get more comprehensive options)\n    - Cost-effectiveness\n    - Safety priorities\n    \n    Return a list of recommended services with brief explanations.\n  \"#\n}\n\nfunction EstimateServiceCosts(damages: VehicleDamage[], services: string[]) -> string {\n  client OpenAI\n  prompt #\"\n    Estimate costs for these vehicle damages and requested services:\n\n    Damages: {{ damages }}\n    Services: {{ services }}\n\n    Provide a detailed cost breakdown including:\n    - Individual damage repair costs\n    - Service costs\n    - Labor estimates\n    - Parts estimates\n    - Total estimated cost range\n\n    Format as a clear, itemized estimate.\n  \"#\n}\n\nfunction AnalyzeVehicleDamage(image_url: string, image_type: string) -> VehicleAnalysis {\n  client OpenAI\n  prompt #\"\n    Analyze this vehicle image for damage assessment and vehicle information.\n\n    Image: {{ image_url }}\n    Image Type: {{ image_type }}\n\n    {% if image_type == \"front\" %}\n    This is a front view of the vehicle. Pay special attention to:\n    - Front license plate\n    - Front bumper damage\n    - Headlight condition\n    - Windshield condition\n    - Hood damage\n    {% elif image_type == \"back\" %}\n    This is a rear view of the vehicle. Pay special attention to:\n    - Rear license plate\n    - Rear bumper damage\n    - Taillight condition\n    - Rear windshield condition\n    - Trunk/tailgate damage\n    {% elif image_type == \"left\" %}\n    This is a left side view of the vehicle. Pay special attention to:\n    - Left side doors\n    - Left side windows\n    - Left side mirrors\n    - Side panel damage\n    - Wheel condition\n    {% elif image_type == \"right\" %}\n    This is a right side view of the vehicle. Pay special attention to:\n    - Right side doors\n    - Right side windows\n    - Right side mirrors\n    - Side panel damage\n    - Wheel condition\n    {% elif image_type == \"damage\" %}\n    This is a close-up damage photo. Provide detailed analysis of:\n    - Type of damage (scratch, dent, crack, etc.)\n    - Severity assessment\n    - Exact location on vehicle\n    - Potential cause\n    {% elif image_type == \"license_plate\" %}\n    This is a license plate close-up. Focus on:\n    - Exact license plate text\n    - Plate condition\n    - Any damage to the plate\n    {% endif %}\n\n    Please provide a comprehensive assessment including:\n    1. Vehicle type, make, model, year, and color if visible\n    2. License plate number (extract exact text if visible)\n    3. All visible damages with type, severity, location, and description\n    4. Overall vehicle condition assessment\n    5. Estimated repair costs for each damage (provide ranges)\n    6. Confidence score for the analysis (0.0 to 1.0)\n\n    Be thorough and accurate. If you cannot determine something with confidence, indicate uncertainty and lower the confidence score accordingly.\n  \"#\n}\n\nfunction AnalyzeVehicleDamageFal(image_url: string, image_type: string) -> VehicleAnalysis {\n  client FAL\n  prompt #\"\n    Analyze this vehicle image for damage assessment and vehicle information.\n\n    Image: {{ image_url }}\n    Image Type: {{ image_type }}\n\n    {% if image_type == \"front\" %}\n    This is a front view of the vehicle. Pay special attention to:\n    - Front license plate\n    - Front bumper damage\n    - Headlight condition\n    - Windshield condition\n    - Hood damage\n    {% elif image_type == \"back\" %}\n    This is a rear view of the vehicle. Pay special attention to:\n    - Rear license plate\n    - Rear bumper damage\n    - Taillight condition\n    - Rear windshield condition\n    - Trunk/tailgate damage\n    {% elif image_type == \"left\" %}\n    This is a left side view of the vehicle. Pay special attention to:\n    - Left side doors\n    - Left side windows\n    - Left side mirrors\n    - Side panel damage\n    - Wheel condition\n    {% elif image_type == \"right\" %}\n    This is a right side view of the vehicle. Pay special attention to:\n    - Right side doors\n    - Right side windows\n    - Right side mirrors\n    - Side panel damage\n    - Wheel condition\n    {% elif image_type == \"damage\" %}\n    This is a close-up damage photo. Provide detailed analysis of:\n    - Type of damage (scratch, dent, crack, etc.)\n    - Severity assessment\n    - Exact location on vehicle\n    - Potential cause\n    {% elif image_type == \"license_plate\" %}\n    This is a license plate close-up. Focus on:\n    - Exact license plate text\n    - Plate condition\n    - Any damage to the plate\n    {% endif %}\n\n    Please provide a comprehensive assessment including:\n    1. Vehicle type, make, model, year, and color if visible\n    2. License plate number (extract exact text if visible)\n    3. All visible damages with type, severity, location, and description\n    4. Overall vehicle condition assessment\n    5. Estimated repair costs for each damage (provide ranges)\n    6. Confidence score for the analysis (0.0 to 1.0)\n\n    Be thorough and accurate. If you cannot determine something with confidence, indicate uncertainty and lower the confidence score accordingly.\n  \"#\n}\n\nfunction AnalyzeVehicleImageFal(image_url: string) -> VehicleAnalysis {\n  client FAL\n  prompt #\"\n    Analyze this vehicle image and provide a detailed assessment.\n\n    Image: {{ image_url }}\n\n    Please identify:\n    1. Vehicle type, make, model, year, and color if visible\n    2. All visible damages with their type, severity, location, and description\n    3. Overall vehicle condition\n    4. Estimated repair costs (provide ranges like \"$500-$1000\")\n    5. Recommendations for repairs\n\n    Be thorough and accurate in your assessment. If you cannot determine something with confidence, indicate uncertainty.\n  \"#\n}\n",
}
export const getBamlFiles = () => {
    return fileMap;
}